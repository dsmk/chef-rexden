#!/bin/bash
#
# Shell functions for Rexden init.d scripts
#
rexden_log_level="user.info"
rexden_logger="/bin/logger"
if [ ! -x "$rexden_logger" ]; then
  rexden_logger="/usr/bin/logger"
fi

_rex_log () {
  "$rexden_logger" -p $rexden_log_level "$@"
}

# rex_open_port port protocol table
#
# protocol defaults to tcp
# table defaults to INPUT
#
rex_open_port () {
  op_cmd="rex_open_port"
  op_port="$1"
  op_protocol="$2"
  if [ "x$op_protocol" = "x" ]; then
    op_protocol=tcp
  fi
  op_table="$3"
  if [ "x$op_table" = "x" ]; then
    op_table=INPUT
  fi
  _rex_log "$op_cmd: rex_open_port $op_port $op_protocol $op_table"

  if iptables -nL "$op_table" | grep -q "${op_protocol} dpt:${op_port}" ; then 
    _rex_log "$op_cmd: already open $op_port $op_protocol $op_table"
  else
    echo "Allowing $op_port/$op_protocol through the firewall"
    _rex_log "$op_cmd: open $op_port/$op_protocol access in $op_table"
    iptables -I "$op_table" -p "$op_protocol" --dport "$op_port" -j ACCEPT
    rex_release_firewall=/bin/true
  fi
}

# rex_open_firewall
#
# This opens all the ports listed in the TCPPORTS and UDPPORTs
#
rex_open_firewall () {
  op_cmd="rex_open_firewall"
  _rex_log "$op_cmd: openning firewall"
  if service iptables status >/dev/null 2>&1 ; then
    rex_release_firewall=/bin/false
    for IPS in $TCPPORTS ; do
      rex_open_port "$IPS" tcp INPUT
    done
    for IPS in $UDPPORTS ; do
      rex_open_port "$IPS" udp INPUT
    done
    if $rex_release_firewall ; then
      # now we want to save our new config so restarts of iptables will work properly
      /sbin/service iptables save
    fi
  else
    _rex_log "$op_cmd: No ports set because no firewall is running"
    :
  fi
}
   
# rex_close_port port protocol table
#
# protocol defaults to tcp
# table defaults to INPUT
#
rex_close_port () {
  op_cmd="rex_close_port"
  op_port="$1"
  op_protocol="$2"
  if [ "x$op_protocol" = "x" ]; then
    op_protocol=tcp
  fi
  op_table="$3"
  if [ "x$op_table" = "x" ]; then
    op_table=INPUT
  fi
  _rex_log "$op_cmd: $op_port/$op_protocol in $op_table"

  if service iptables status >/dev/null 2>&1 ; then
    if iptables -nL "$op_table" | grep -q "${op_protocol} dpt:${op_port}" ; then 
      echo "Closing $op_port/$op_protocol in $op_table"
      _rex_log "$op_cmd: closing $op_port/$op_protocol in $op_table"
      iptables -D "$op_table" -p "$op_protocol" --dport "$op_port" -j ACCEPT
      rex_release_firewall=/bin/true
    else
      _rex_log "$op_cmd: already closed $op_port/$op_protocol in $op_table"
    fi
  fi
}

# rex_close_firewall
#
# This closes all the ports listed in the TCPPORTS and UDPPORTs
#
rex_close_firewall () {
  op_cmd="rex_close_firewall"
  _rex_log "$op_cmd: starting"
  if service iptables status >/dev/null 2>&1 ; then
    rex_release_firewall=/bin/false
    for IPS in $TCPPORTS ; do
      rex_close_port "$IPS" tcp INPUT
    done
    for IPS in $UDPPORTS ; do
      rex_close_port "$IPS" udp INPUT
    done
    if $rex_release_firewall ; then
      /sbin/service iptables save
    fi
  else
    _rex_log "$op_cmd: No ports set because no firewall is running"
  fi
}
   
